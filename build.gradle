plugins {
	id 'checkstyle'
    id 'java'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

apply plugin: 'checkstyle'

repositories {
    jcenter()
}

ext {
	jacksonVersion = '2.12.2'
	checkstyleVersion = '8.5'
}

checkstyle {
	toolVersion = "${checkstyleVersion}"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

// give test dependencies access to compileOnly dependencies to emulate providedCompile
configurations {
    testImplementation.extendsFrom compileOnly
}

dependencies {
    compileOnly 'de.jensd:addon-commons:1.1.0'
    compileOnly 'de.jensd:mqttfx-payload-decoders:1.3.1'
    
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    
    implementation group: "com.fasterxml.jackson.dataformat", name:"jackson-dataformat-cbor", version:"${jacksonVersion}", transitive: false

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	project {
		natures 'net.sf.eclipsecs.core.CheckstyleNature'
		buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
	}
}

jar {
    baseName = 'mqttfx-cbor-decoder'
    version =  version
    manifest {
        attributes 'Implementation-Title': 'MQTT.fx CBOR Decoder',
                   'Implementation-Version': version
    }
}

shadowJar {
	// we relocate Jackson because we use a newer version than MQTT.fx includes. Jackson 2.10.1+ includes
	// a CBOR floating point encoding fix that we need here, but MQTT.fx 1.7.1 uses Jackson 2.9.4.
	relocate 'com.fasterxml.jackson', 'mcd.jackson'
	exclude 'META-INF/maven/com.fasterxml.jackson.core/**'
	exclude 'META-INF/maven/com.fasterxml.jackson.dataformat/**'
	exclude 'META-INF/services/com.fasterxml.jackson.*'
}